#!/bin/bash

while true
do

# Logo

echo "========================================================================================================================"
curl -s https://raw.githubusercontent.com/StakeTake/script/main/logo.sh | bash
echo "========================================================================================================================"

# Menu

PS3='Select an action: '
options=(
"Install Node"
"Check Log"
"Check balance"
"Create Validator"
"Exit")
select opt in "${options[@]}"
do
case $opt in

"Install Node")
echo "============================================================"
echo "Install start"
echo "============================================================"
echo "Setup NodeName:"
echo "============================================================"
read NODENAME
echo "============================================================"
echo "Setup WalletName:"
echo "============================================================"
read WALLETNAME
echo export NODENAME=${NODENAME} >> $HOME/.bash_profile
echo export WALLETNAME=${WALLETNAME} >> $HOME/.bash_profile
echo export CHAIN_ID=mantle-1 >> $HOME/.bash_profile
source ~/.bash_profile

#UPDATE APT
sudo apt update && sudo apt upgrade -y
sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essential bsdmainutils git make ncdu gcc git jq chrony liblz4-tool -y

#INSTALL GO
wget https://golang.org/dl/go1.17.9.linux-amd64.tar.gz; \
rm -rv /usr/local/go; \
tar -C /usr/local -xzf go1.17.9.linux-amd64.tar.gz && \
rm -v go1.17.9.linux-amd64.tar.gz && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile && \
source ~/.bash_profile && \
go version


#INSTALL
git clone https://github.com/AssetMantle/node.git
cd node
git checkout tags/v0.3.0
make install

mantleNode init $NODENAME --chain-id $CHAIN_ID
mantleNode config chain-id $CHAIN_ID


echo "============================================================"
echo "Be sure to write down the mnemonic!"
echo "============================================================"
#WALLET
mantleNode keys add $WALLETNAME

mantleNode unsafe-reset-all
rm $HOME/.mantleNode/config/genesis.json
wget -O $HOME/.mantleNode/config/genesis.json "https://raw.githubusercontent.com/AssetMantle/genesisTransactions/main/mantle-1/final_genesis.json"

external_address=$(wget -qO- eth0.me)
peers="7ae8a8e62efcccf15198525868b0873b3c9bd698@65.108.121.37:36656,38f4504f74a9fd70f158270751c31a4d146f987c@65.21.226.249:26616,169a3e12d45903d961ace560a384d3bcb55092e2@3.137.211.131:26656,8f47445897afc72dec187d65f8cbf14f5ed5c86f@88.99.166.120:26656,ae4f04cea40f6d6047ed2baf3483b5ca6fce3482@154.12.242.63:26656,eef583258a773765e556fa723bae76d572933eaa@23.88.37.143:21356,4fc4fa6ec44f6da10830ffcb6344a8635156e11e@141.95.65.26:26656,606b884008171f6fa8a475d4e63a79fb8dd77c38@51.250.107.51:26656,7eeb595f1205c2c7230b3812badb1844185b3727@65.108.99.224:46656,d0dc9234db7b9e5bb853afbd96055c46990aa55f@65.21.131.144:29656,1f28c7cd884a76a022038f22923eea8101d3538f@168.119.89.31:26656,df406a21ac70fbcd7ae06448fe0e7b428385ec6f@65.21.195.98:26656,af80c95f95301fab1778a722a0d8596ca10006cc@136.243.105.182:26656,ab19fe08d8587df7a0aaec966198425a91de6278@159.89.162.214:26656,cbb1bb6b073e65bb5a9a349e8ac2bb86348b5da1@142.132.210.135:26656,cc938d4354c61e4f59b9626737c2aa1e448f4d57@5.161.80.214:26656,5622cc659818baa12ae9fa7f58bb8c0be23366fe@52.8.59.124:26656,c27d512e10d48e921e4fe88f0221a4e2c80567f1@13.56.34.84:26656,a7aafd3330e57d3104be5b2820b6ad2d52ac19ec@3.39.94.36:26656"
sed -i.bak -e "s/^external_address *=.*/external_address = \"$external_address:26656\"/; s/^persistent_peers *=.*/persistent_peers = \"$peers\"/" $HOME/.mantleNode/config/config.toml

# config pruning
pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="0"
pruning_interval="10"

sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.mantleNode/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.mantleNode/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.mantleNode/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.mantleNode/config/app.toml


tee $HOME/mantleNode.service > /dev/null <<EOF
[Unit]
Description=mantleNode
After=network.target
[Service]
Type=simple
User=$USER
ExecStart=$(which mantleNode) start --x-crisis-skip-assert-invariants
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF

sudo mv $HOME/mantleNode.service /etc/systemd/system/

# start service
sudo systemctl daemon-reload
sudo systemctl enable mantleNode
sudo systemctl restart mantleNode

break
;;

"Check Log")

journalctl -u mantleNode -f -o cat

break
;;


"Check balance")
mantleNode q bank balances $(mantleNode keys show $WALLETNAME -a --bech acc)
break
;;

"Create Validator")
mantleNode tx staking create-validator \
  --amount 1000000umntl \
  --from $WALLETNAME \
  --commission-max-change-rate "0.05" \
  --commission-max-rate "0.20" \
  --commission-rate "0.05" \
  --min-self-delegation "1" \
  --pubkey $(mantleNode tendermint show-validator) \
  --moniker $NODENAME \
  --chain-id $CHAIN_ID \
  --gas 200000 \
  --fees 200umntl \
  -y
break
;;

"Exit")
exit
;;
*) echo "invalid option $REPLY";;
esac
done
done
